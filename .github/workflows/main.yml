name: CI/CD Pipeline – Test & Deploy

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    name: ✅ Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Install Dependencies
        run: npm install
        env:
          SKIP_HUSKY: true

      - name: 🧪 Run Tests
        run: npm run test

  deploy:
    name: 🚀 Deploy to Server
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: 📦 Install Production Dependencies
        run: npm install --omit=dev
        env:
          SKIP_HUSKY: true

      - name: 📦 Archive release contents
        run: zip -r release.zip . -x ".git/*"

      - name: 🔐 Setup SSH Key
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > id_ed25519
          chmod 600 id_ed25519
          eval $(ssh-agent -s)
          ssh-add id_ed25519

      - name: 🚀 Deploy to Server via SSH
        run: |
          scp -i id_ed25519 -o StrictHostKeyChecking=no release.zip root@${{ secrets.SERVER_HOST }}:/root/madm-api-release.zip

          ssh -i id_ed25519 -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} <<EOF
          rm -rf ~/madm-api
          mkdir ~/madm-api
          unzip -o /root/madm-api-release.zip -d ~/madm-api

          cd ~/docker
          docker-compose pull
          docker-compose build --no-cache
          docker-compose up -d madm-api
          docker image prune -f
          EOF
